# === Builder Stage ===
FROM python:3.12-slim AS builder

# Environment config
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

# Install build dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Install UV package manager
RUN pip install uv

# Copy dependency files
COPY pyproject.toml uv.lock ./

# Install dependencies using lockfile
RUN uv pip install --system -r pyproject.toml

# === Production Stage ===
FROM python:3.12-slim AS production

# Environment config
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV PATH="/usr/local/bin:$PATH"

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN groupadd -r floweruser && useradd -r -g floweruser floweruser

# Set working directory
WORKDIR /app

# Copy installed Python packages and tools from builder
COPY --from=builder /usr/local/lib/python3.12/site-packages /usr/local/lib/python3.12/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin

# Copy startup script
COPY docker/start_flower.sh ./start_flower.sh
RUN chmod +x start_flower.sh

# Set ownership
RUN chown -R floweruser:floweruser /app

# Switch to non-root user
USER floweruser

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=10s --retries=3 \
    CMD curl -f http://localhost:5555 || exit 1

# Expose port
EXPOSE 5555

# Start command
CMD ["./start_flower.sh"] 
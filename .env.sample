# =============================================================================
# LLM Calendar Assistant - Environment Configuration
# =============================================================================
# Copy this file to .env and configure your settings
#
# ðŸ”´ USER-SPECIFIC: Must be customized with your credentials/preferences
# ðŸŸ  PROJECT DEFAULTS: Required but standard values (don't change unless needed)
# ðŸŸ¢ OPTIONAL OVERRIDES: Code has defaults, override if desired

# =============================================================================
# PROJECT
# =============================================================================
# ðŸŸ  Project identification
PROJECT_NAME=llm-calendar-assistant

# =============================================================================
# DOCKER PORTS
# =============================================================================
# ðŸŸ  External port mappings
API_PORT=8080
REDIS_PORT=6379
FLOWER_PORT=5555

# =============================================================================
# DATABASE
# =============================================================================
# ðŸ”´ Connection credentials
DATABASE_HOST=your_supabase_host.supabase.com
DATABASE_PASSWORD=your_supabase_password
DATABASE_USER=postgres.your_project_id

# ðŸŸ¢ Connection settings
DATABASE_NAME=postgres
DATABASE_PORT=6543

# =============================================================================
# GOOGLE CALENDAR
# =============================================================================
# Note: Host saves to token.json, Docker uses tokens/token.json via named volume

# ðŸŸ¢ User preferences
CALENDAR_USER_TIMEZONE=Australia/Sydney

# ðŸŸ¢ Calendar settings
CALENDAR_ID=primary
CALENDAR_TOKEN_PATH=token.json
CALENDAR_CREDENTIALS_PATH=credentials.json

# ðŸŸ¢ API configuration
CALENDAR_API_NAME=calendar
CALENDAR_API_VERSION=v3
CALENDAR_SCOPES=["https://www.googleapis.com/auth/calendar"]

# =============================================================================
# LLM PROVIDERS
# =============================================================================
# ðŸ”´ API keys (at least one required)
OPENAI_API_KEY=sk-your-openai-key-here
ANTHROPIC_API_KEY=sk-ant-your-anthropic-key-here

# ðŸŸ¢ Processing settings
LLM_CONFIDENCE_THRESHOLD=0.7

# ðŸŸ¢ OpenAI settings
OPENAI_MODEL=gpt-4o
OPENAI_EMBEDDING_MODEL=text-embedding-3-small
OPENAI_TEMPERATURE=0.0
OPENAI_MAX_TOKENS=2048
OPENAI_MAX_RETRIES=3
OPENAI_TIMEOUT=30

# ðŸŸ¢ Anthropic settings
ANTHROPIC_MODEL=claude-sonnet-4-20250514
ANTHROPIC_TEMPERATURE=0.0
ANTHROPIC_MAX_TOKENS=2048
ANTHROPIC_MAX_RETRIES=3
ANTHROPIC_TIMEOUT=30

# =============================================================================
# WORKER (CELERY)
# =============================================================================
# ðŸŸ¢ Worker settings
CELERY_CONCURRENCY=4
CELERY_LOG_LEVEL=INFO

# =============================================================================
# LOGGING
# =============================================================================
# ðŸŸ¢ Application logging
LOG_LEVEL=INFO
LOG_CONSOLE_OUTPUT=true
LOG_FILE_OUTPUT=true

# ====================================================================
# Setup Instructions:
# ====================================================================
#
# 1. Supabase Database Setup:
#    - Create account at https://supabase.com/ (free tier available)
#    - Create new project with strong password
#    - Get connection details from Settings â†’ Database
#    - Update DATABASE_* variables above
#
# 2. LLM Provider Setup:
#    - Get OpenAI API key: https://platform.openai.com/api-keys
#    - Get Anthropic API key: https://console.anthropic.com/
#    - Add at least one API key above
#
# 3. Google Calendar Setup:
#    - Create Google Cloud Project
#    - Enable Calendar API
#    - Create OAuth 2.0 credentials (Desktop Application)
#    - Download as credentials.json in project root
#    - Run: ./scripts/init_token.sh
#
# 4. Start Application (Both modes use Docker):
#    - Production: ./docker/start.sh  
#    - Development: ./docker/start.sh --dev
#
# ==================================================================== 